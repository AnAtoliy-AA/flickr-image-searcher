{"version":3,"sources":["redux/bookmarks-reducer.ts","redux/imagesList-reducer.ts","shared/const.ts","components/ImageCard/ImageCard.tsx","components/ImagesContainer/ImagesContainer.tsx","api-keys/api-keys.ts","services/image-api.ts","redux/searchForm-reducer.ts","components/Paginator/Paginator.tsx","components/SearchForm/SearchForm.tsx","hooks/useDebounce.ts","components/MainPage/MainPage.tsx","components/BookmarksPage/BookmarksPage.tsx","components/SideBar/SideBar.tsx","components/IdleMask/IdleMask.tsx","redux/auth-reducer.ts","components/Login/Login.tsx","components/Logout/Logout.tsx","components/Header/Header.tsx","components/Footer/Footer.tsx","App.tsx","reportWebVitals.ts","redux/store.ts","index.tsx"],"names":["ACTION_TYPE","ACTION_CONST","initialState","bookmarksList","String","bookmarksReducer","state","action","type","ADD_BOOKMARK","includes","payload","REMOVE_BOOKMARK","filter","b","DEFAULT_VALUES","FIRST_PAGE","EMPTY","TRUE","FALSE","SEARCH_DELAY_TIME","PAGE_SIZE","PAGES_PORTION","IDLE_DELAY_TIME","IDLE_DEBOUNCE","ZERO","ELEMENT_TEXT","ROUTE_NAMES_MAIN","ROUTE_NAMES_BOOKMARKS","ImageCard","imageSrcPath","imageTitle","handleAddButtonClick","handleRemoveButtonClick","userTags","useState","tagInputValue","setTagInputValue","Card","className","CardActionArea","CardMedia","component","height","image","title","CardContent","Typography","gutterBottom","variant","noWrap","CardActions","exact","path","Button","size","color","onClick","Input","placeholder","onChange","event","currentTarget","value","ImagesContainer","imagesData","useSelector","store","imagesList","imagesInfoList","bookmarks","dispatch","useDispatch","bookmark","tagValue","addBookmark","page","photo","map","imageEl","farm","server","id","secret","GOOGLE_API_KEY","imageAppApi","imagesName","pageNumber","axios","get","then","response","data","pages","perpage","total","isLoading","setImagesInfoData","SET_IMAGES_INFO","setIsLoading","SET_IS_LOADING","getImagesByNameInfo","imageName","a","photos","imagesListReducer","Paginator","searchTerm","searchForm","activePage","allPagesCount","i","push","portionNumber","setPortionNumber","portionCount","Math","ceil","leftPortionPageNumber","rightPortionPageNumber","startIcon","p","searchFormReducer","SET_SEARCH_TERM","toLowerCase","SearchForm","debouncedSearchTerm","delay","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","onSubmit","e","preventDefault","searchValue","target","setSearchFormTerm","MainPage","BookmarksPage","SideBar","React","setValue","BottomNavigation","newValue","BottomNavigationAction","Link","to","label","icon","fontSize","IdleMask","seconds","setSeconds","interval","setInterval","clearInterval","userData","Aa","accessToken","ft","FS","Te","qU","lS","yJ","googleId","profileObj","imageUrl","email","name","givenName","qc","token_type","access_token","tokenId","tokenObj","scope","login_hint","isAuthorized","userFailureMessage","logout","authReducer","token","Login","clientId","buttonText","onSuccess","onFailure","authFailureMessage","cookiePolicy","Logout","onLogoutSuccess","Header","userName","auth","Footer","App","isIdle","setIsIdle","useIdleTimer","timeout","onIdle","onActive","debounce","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","createStore","localStorage","reduxState","JSON","parse","composeWithDevTools","applyMiddleware","thunkMiddleware","subscribe","stringify","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.377aa172.chunk.js","sourcesContent":["enum ACTION_TYPE {\r\n  ADD_BOOKMARK = \"ADD_BOOKMARK\",\r\n  REMOVE_BOOKMARK = \"REMOVE_BOOKMARK\",\r\n}\r\n\r\nlet initialState = {\r\n  bookmarksList: [String],\r\n};\r\n\r\nconst bookmarksReducer = (state = initialState, action: any) => {\r\n  switch (action.type) {\r\n    case ACTION_TYPE.ADD_BOOKMARK: {\r\n      if (state.bookmarksList.includes(action.payload)) {\r\n        return state;\r\n      } else\r\n        return {\r\n          ...state,\r\n          bookmarksList: [...state.bookmarksList, action.payload],\r\n        };\r\n    }\r\n    case ACTION_TYPE.REMOVE_BOOKMARK: {\r\n      return {\r\n        ...state,\r\n        bookmarksList: state.bookmarksList.filter((b) => b !== action.payload),\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const addBookmark = (bookmark: string, imageTitle: string, tagValue: string) => ({\r\n  type: ACTION_TYPE.ADD_BOOKMARK,\r\n  payload: { bookmark, imageTitle, tagValue },\r\n});\r\nexport const removeBookmark = (bookmark: string) => ({\r\n  type: ACTION_TYPE.REMOVE_BOOKMARK,\r\n  payload: bookmark,\r\n});\r\n\r\nexport default bookmarksReducer;\r\n","import { DEFAULT_VALUES } from \"./../shared/const\";\r\nimport { imageAppApi } from \"../services/image-api\";\r\n\r\nenum ACTION_CONST {\r\n  SET_IMAGES_INFO = \"SET_IMAGES_INFO\",\r\n  SET_IS_LOADING = \"SET_IS_LOADING\",\r\n}\r\n\r\nlet initialState = {\r\n  imagesInfoList: {\r\n    page: 0,\r\n    pages: 0,\r\n    perpage: 0,\r\n    total: \"0\",\r\n    photo: [],\r\n  },\r\n  isLoading: DEFAULT_VALUES.FALSE,\r\n};\r\n\r\nconst imagesListReducer = (state = initialState, action: any) => {\r\n  switch (action.type) {\r\n    case ACTION_CONST.SET_IMAGES_INFO: {\r\n      return { ...state, imagesInfoList: action.payload };\r\n    }\r\n    case ACTION_CONST.SET_IS_LOADING: {\r\n      return { ...state, isLoading: action.payload };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setImagesInfoData = (imagesInfoList: any) => ({\r\n  type: ACTION_CONST.SET_IMAGES_INFO,\r\n  payload: imagesInfoList,\r\n});\r\n\r\nexport const setIsLoading = (isLoading: boolean) => ({\r\n  type: ACTION_CONST.SET_IS_LOADING,\r\n  payload: isLoading,\r\n});\r\n\r\nexport const getImagesByNameInfo = (\r\n  imageName: string,\r\n  pageNumber: number\r\n) => async (dispatch: (arg0: { type: string; payload: any }) => void) => {\r\n  if (imageName) {\r\n    dispatch(setIsLoading(DEFAULT_VALUES.TRUE));\r\n\r\n    const response = await imageAppApi.getImagesByName(imageName, pageNumber);\r\n\r\n    dispatch(setImagesInfoData(response.photos));\r\n    dispatch(setIsLoading(DEFAULT_VALUES.FALSE));\r\n  } else dispatch(setImagesInfoData(initialState.imagesInfoList));\r\n};\r\n\r\nexport default imagesListReducer;\r\n","export const DEFAULT_VALUES = {\r\n  FIRST_PAGE: 1,\r\n  EMPTY: \"\",\r\n  TRUE: true,\r\n  FALSE: false,\r\n  SEARCH_DELAY_TIME: 500,\r\n  PAGE_SIZE: 100,\r\n  PAGES_PORTION: 5,\r\n  IDLE_DELAY_TIME: 1000 * 60 * 1,\r\n  IDLE_DEBOUNCE: 500,\r\n  ZERO: 0,\r\n};\r\n\r\nexport const ELEMENT_TEXT = {\r\n  SUBMIT: \"Submit\",\r\n  PREVIOUS: \"Previous\",\r\n  BACK: \"Back\",\r\n  FORWARD: \"Forward\",\r\n  PAGE: \"Page\",\r\n  OF: \"of\",\r\n  ADD_BUTTON: \"Bookmark it!\",\r\n  REMOVE_BUTTON: \"Remove it!\",\r\n  NOT_ACTIVE_USER: \"User is not active\",\r\n  FOR: \"for\",\r\n  SECONDS: \"seconds.\",\r\n  EMPTY_IMAGE_CONTAINER:\r\n    \"No images here. Would you try to search for anything else?\",\r\n  APP_NAME: \"Image Finder\",\r\n  COPYRIGHTS: \"© Copyrights\",\r\n  AUTHORIZED: \"You have been authorized as \",\r\n  NOT_AUTHORIZED: \"You are not authorized\",\r\n  WRITE_TAGS: 'some tags?'\r\n};\r\n\r\nexport const ROUTE_NAMES_MAIN = \"main\";\r\nexport const ROUTE_NAMES_BOOKMARKS = \"bookmarks\";\r\n","import React, { useState } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport {\n  Button,\n  Card,\n  CardActionArea,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Input,\n  Typography,\n} from \"@material-ui/core\";\nimport \"./ImageCard.scss\";\nimport { DEFAULT_VALUES, ELEMENT_TEXT, ROUTE_NAMES_BOOKMARKS, ROUTE_NAMES_MAIN } from \"../../shared/const\";\nimport { Title } from \"@material-ui/icons\";\n\ntype TProps = {\n  imageSrcPath: string;\n  handleAddButtonClick: any;\n  handleRemoveButtonClick: any;\n  imageTitle?: string;\n  userTags?: string;\n};\n\nconst ImageCard: React.FC<TProps> = ({\n  imageSrcPath,\n  imageTitle,\n  handleAddButtonClick,\n  handleRemoveButtonClick,\n  userTags,\n}) => {\n  const [tagInputValue, setTagInputValue] = useState(DEFAULT_VALUES.EMPTY);\n\n  const handleTagInputChange = (event: any) => {\n    setTagInputValue(event.currentTarget.value);\n  }\n\n  return (\n    <Card className=\"ImageCard\">\n      <CardActionArea>\n        <CardMedia component=\"img\" height=\"180\" image={imageSrcPath} title={imageTitle}/>\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\" noWrap={true}>\n            {imageTitle}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions className=\"CardActionsContainer\">\n        <Route exact path={`/${ROUTE_NAMES_MAIN}`}>\n          <Button\n            size=\"small\"\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={() => handleAddButtonClick(imageSrcPath, imageTitle, tagInputValue)}\n          >\n            {ELEMENT_TEXT.ADD_BUTTON}\n          </Button>\n          <Input placeholder={ELEMENT_TEXT.WRITE_TAGS} onChange={handleTagInputChange}/>\n        </Route>\n        <Route exact path={`/${ROUTE_NAMES_BOOKMARKS}`}>\n          <Button\n            size=\"small\"\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={() => handleRemoveButtonClick(imageSrcPath)}\n          >\n            {ELEMENT_TEXT.REMOVE_BUTTON}\n          </Button>\n          <Typography gutterBottom variant=\"h5\" title={userTags}  noWrap={true}>\n            {userTags}\n          </Typography>\n        </Route>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default ImageCard;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport \"./ImagesContainer.scss\";\nimport { addBookmark, removeBookmark } from \"../../redux/bookmarks-reducer\";\nimport { Route } from \"react-router-dom\";\nimport ImageCard from \"../ImageCard/ImageCard\";\nimport { IImageData } from \"../../shared/interfaces\";\nimport { ELEMENT_TEXT, ROUTE_NAMES_BOOKMARKS, ROUTE_NAMES_MAIN } from \"../../shared/const\";\n\nconst ImagesContainer: React.FC = () => {\n  const imagesData = useSelector(\n    (store: any) => store.imagesList.imagesInfoList\n  );\n  const bookmarksList = useSelector(\n    (store: any) => store.bookmarks.bookmarksList\n  );\n\n  const dispatch = useDispatch();\n\n  const handleAddButtonClick = (imageSrcPath: string, imageTitle: string, tagInputValue: string) => {\n    dispatch(addBookmark(imageSrcPath, imageTitle, tagInputValue));\n  };\n\n  const handleRemoveButtonClick = (imageSrcPath: string) => {\n    dispatch(removeBookmark(imageSrcPath));\n  };\n\n  return (\n    <div className=\"ImagesContainer\">\n      <Route exact path={`/${ROUTE_NAMES_MAIN}`}>\n        {imagesData.page\n          ? imagesData.photo.map((imageEl: IImageData) => {\n            //TODO\n              const imageSrcPath = `https://farm${imageEl.farm}.staticflickr.com/${imageEl.server}/${imageEl.id}_${imageEl.secret}.jpg`;\n\n              if (imageSrcPath) {\n                return (\n                  <ImageCard\n                    key={imageEl.id}\n                    imageSrcPath={imageSrcPath}\n                    imageTitle={imageEl.title}\n                    handleAddButtonClick={handleAddButtonClick}\n                    handleRemoveButtonClick={handleRemoveButtonClick}\n                  />\n                );\n              }\n            })\n          : `${ELEMENT_TEXT.EMPTY_IMAGE_CONTAINER}`}\n      </Route>\n      <Route exact path={`/${ROUTE_NAMES_BOOKMARKS}`}>\n        {bookmarksList.map((imageEl: any):JSX.Element | undefined => {\n          if (imageEl) {\n            return (\n              <ImageCard\n                key={imageEl}\n                imageSrcPath={imageEl.bookmark}\n                imageTitle={imageEl.imageTitle}\n                userTags={imageEl.tagValue}\n                handleAddButtonClick={handleAddButtonClick}\n                handleRemoveButtonClick={handleRemoveButtonClick}\n              />\n            );\n           }\n        })}\n      </Route>\n    </div>\n  );\n};\n\nexport default ImagesContainer;\n","export const API_KEY = \"de58ac752340901ded737da22c3fe0c0\";\r\n\r\nexport const GOOGLE_API_KEY =\r\n  \"459175857441-p5479p7qs6qjllf3p7n3f7678800h1li.apps.googleusercontent.com\";\r\n","import { API_KEY } from '../api-keys/api-keys';\r\nimport axios from \"axios\";\r\n\r\nconst FLICKR_API = \"https://www.flickr.com/services/rest/?\";\r\nconst FliCKR_API_METHOD = \"method=flickr.photos.search\";\r\nconst FLICKR_FORMAT = \"format=json&nojsoncallback=1\";\r\n\r\n\r\nexport const imageAppApi = {\r\n  getImagesByName(imagesName: string, pageNumber: number) {\r\n    return axios.get(`${FLICKR_API}${FliCKR_API_METHOD}&api_key=${API_KEY}&text=${imagesName}&page=${pageNumber}&${FLICKR_FORMAT}`)\r\n    .then((response) => {\r\n      return response.data;\r\n    });\r\n  },\r\n};\r\n","\r\nenum ACTION_TYPE {\r\n    SET_SEARCH_TERM = 'SET_SEARCH_TERM',\r\n}\r\n\r\nlet initialState = {\r\n    searchTerm: '',\r\n}\r\n\r\nconst searchFormReducer = (state = initialState, action: any) => {\r\n    switch (action.type) {\r\n        case ACTION_TYPE.SET_SEARCH_TERM: {\r\n            return { ...state, searchTerm: action.payload.toLowerCase() }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setSearchFormTerm = (searchTerm: string) => ({ type: ACTION_TYPE.SET_SEARCH_TERM, payload: searchTerm });\r\n\r\nexport default searchFormReducer;\r\n","import React, { useState } from \"react\";\nimport \"./Paginator.scss\";\nimport { Button } from \"@material-ui/core\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\nimport { DEFAULT_VALUES, ELEMENT_TEXT } from \"../../shared/const\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getImagesByNameInfo } from \"../../redux/imagesList-reducer\";\n\nconst PREVIOUS_NUMBER = 1;\nconst NEXT_NUMBER = 1;\n\nconst Paginator: React.FC = () => {\n  const dispatch = useDispatch();\n  const searchTerm = useSelector((store: any) => store.searchForm.searchTerm);\n  const activePage = useSelector(\n    (store: any) => store.imagesList.imagesInfoList.page\n  );\n  const allPagesCount = useSelector(\n    (store: any) => store.imagesList.imagesInfoList.pages\n  );\n\n  const pages = [];\n\n  for (let i = 1; i <= allPagesCount; i++) {\n    pages.push(i);\n  }\n\n  const [portionNumber, setPortionNumber] = useState(1);\n\n  const portionCount = Math.ceil(allPagesCount / DEFAULT_VALUES.PAGES_PORTION);\n  const leftPortionPageNumber =\n    (portionNumber - PREVIOUS_NUMBER) * DEFAULT_VALUES.PAGES_PORTION +\n    NEXT_NUMBER;\n  const rightPortionPageNumber = portionNumber * DEFAULT_VALUES.PAGES_PORTION;\n\n  const onPageChanged = (page: number): void => {\n    dispatch(getImagesByNameInfo(searchTerm, page));\n  };\n\n  return (\n    <div className=\"Paginator\">\n      {portionNumber > 1 && (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"small\"\n          onClick={() => setPortionNumber(portionNumber - PREVIOUS_NUMBER)}\n          startIcon={<ArrowBackIcon />}\n        >\n          {ELEMENT_TEXT.BACK}\n        </Button>\n      )}\n      {activePage !== DEFAULT_VALUES.ZERO && ELEMENT_TEXT.PAGE}\n      {pages\n        .filter(\n          (p) => p >= leftPortionPageNumber && p <= rightPortionPageNumber\n        )\n        .map((p) => {\n          return (\n            <span\n              key={p}\n              className={`${activePage === p && \"selected-page\"}`}\n              onClick={() => {\n                onPageChanged(p);\n              }}\n            >\n              {p}\n            </span>\n          );\n        })}\n      {activePage !== DEFAULT_VALUES.ZERO && (\n        <span>\n          {\" \"}\n          {ELEMENT_TEXT.OF} {allPagesCount}\n        </span>\n      )}\n      {portionCount > portionNumber && (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"small\"\n          onClick={() => setPortionNumber(portionNumber + NEXT_NUMBER)}\n          startIcon={<ArrowForwardIcon />}\n        >\n          {ELEMENT_TEXT.FORWARD}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default Paginator;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport useDebounce from \"../../hooks/useDebounce\";\nimport { getImagesByNameInfo } from \"../../redux/imagesList-reducer\";\nimport { setSearchFormTerm } from \"../../redux/searchForm-reducer\";\nimport { DEFAULT_VALUES } from \"../../shared/const\";\nimport \"./SearchForm.scss\";\n\nconst SearchForm: React.FC = () => {\n  const dispatch = useDispatch();\n  \n  const searchTerm = useSelector(\n    (store: any) => store.searchForm.searchTerm\n  );\n\n  const debouncedSearchTerm = useDebounce(\n    searchTerm,\n    DEFAULT_VALUES.SEARCH_DELAY_TIME\n  );\n  const activePage = useSelector(\n    (store: any) => store.imagesList.imagesInfoList.page\n  );\n  const isLoading = useSelector(\n    (store: any) => store.imagesList.isLoading\n  );\n\n  useEffect(() => {\n    if (debouncedSearchTerm) {\n      dispatch(\n        getImagesByNameInfo(searchTerm, activePage || DEFAULT_VALUES.FIRST_PAGE)\n      );\n    }\n  }, [activePage, debouncedSearchTerm, dispatch, searchTerm]);\n\n  const handleOnInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const searchValue = event.target.value;\n\n    dispatch(setSearchFormTerm(searchValue))\n  };\n\n  const handleOnSubmit = (e: React.FormEvent<HTMLFormElement>): void => {\n    e.preventDefault();\n\n    if (searchTerm) {\n      dispatch(\n        getImagesByNameInfo(searchTerm, activePage || DEFAULT_VALUES.FIRST_PAGE)\n      );\n    }\n  };\n\n  return (\n    <form className='SearchForm' onSubmit={handleOnSubmit}>\n      <input className='SearchInput' value={searchTerm} onChange={handleOnInputChange}></input>\n      {isLoading && <div>Searching ...</div>}\n    </form>\n  );\n};\n\nexport default SearchForm;\n","import React, { useState, useEffect } from \"react\";\r\n\r\nexport default function useDebounce(value: any, delay: number) {\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(() => {\r\n    const handler = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n    \r\n    return () => {\r\n      clearTimeout(handler);\r\n    };\r\n  }, [delay, value]);\r\n\r\n  return debouncedValue;\r\n}\r\n","import React from 'react';\nimport ImagesContainer from '../ImagesContainer/ImagesContainer';\nimport Paginator from '../Paginator/Paginator';\nimport SearchForm from '../SearchForm/SearchForm';\nimport './MainPage.scss';\n\nconst MainPage: React.FC = () => (\n  <div className=\"MainPage\">\n    <SearchForm />\n    <Paginator />\n    <ImagesContainer />\n  </div>\n);\n\nexport default MainPage;\n","import React from \"react\";\nimport ImagesContainer from \"../ImagesContainer/ImagesContainer\";\nimport \"./BookmarksPage.scss\";\n\nconst BookmarksPage: React.FC = () => (\n  <div className=\"BookmarksPage\">\n    <ImagesContainer />\n  </div>\n);\n\nexport default BookmarksPage;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport CloudIcon from \"@material-ui/icons/Cloud\";\nimport BookmarksIcon from \"@material-ui/icons/Bookmarks\";\nimport \"./SideBar.scss\";\nimport { BottomNavigation, BottomNavigationAction } from \"@material-ui/core\";\nimport { ROUTE_NAMES_BOOKMARKS, ROUTE_NAMES_MAIN } from \"../../shared/const\";\n\nconst SideBar: React.FC = () => {\n  const [value, setValue] = React.useState('main');\n\n  const handleChange = (event: any, newValue: React.SetStateAction<string>) => {\n    setValue(newValue);\n  };\n  return (\n    <div className=\"SideBar\">\n      <BottomNavigation value={value} onChange={handleChange} className=\"Nav\">\n        <BottomNavigationAction\n          component={Link}\n          to={ROUTE_NAMES_MAIN}\n          label=\"Main\"\n          value={ROUTE_NAMES_MAIN}\n          className=\"NavLink\"\n          icon={<CloudIcon fontSize=\"large\" />}\n        />\n        <BottomNavigationAction\n          component={Link}\n          to={ROUTE_NAMES_BOOKMARKS}\n          label=\"Bookmarks\"\n          value={ROUTE_NAMES_BOOKMARKS}\n          className=\"NavLink\"\n          icon={<BookmarksIcon fontSize=\"large\" />}\n        />\n      </BottomNavigation>\n    </div>\n  );\n};\n\nexport default SideBar;\n","import React, { useEffect, useState } from \"react\";\nimport { ELEMENT_TEXT } from \"../../shared/const\";\nimport \"./IdleMask.scss\";\n\nconst IdleMask: React.FC = () => {\n  const [seconds, setSeconds] = useState(0);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setSeconds((seconds) => seconds + 1);\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [seconds]);\n\n  return (\n    <div className=\"IdleMask\">\n      {ELEMENT_TEXT.NOT_ACTIVE_USER} {ELEMENT_TEXT.FOR} {seconds}{\" \"}\n      {ELEMENT_TEXT.SECONDS}\n    </div>\n  );\n};\n\nexport default IdleMask;\n","import { DEFAULT_VALUES } from \"../shared/const\";\r\n\r\nconst ACTION_CONST = {\r\n  SET_USER_DATA: \"SET_USER_DATA\",\r\n  SET_USER_FAILURE: \"SET_USER_FAILURE\",\r\n  SET_DEFAULT_VALUES: \"SET_DEFAULT_VALUES\",\r\n  SET_IS_LOADING_PROGRESS: \"AUTH_REDUCER_TOGGLE_IS_LOADING_PROGRESS\",\r\n};\r\n\r\nlet initialState = {\r\n  userData: {\r\n    Aa: DEFAULT_VALUES.EMPTY,\r\n    accessToken: DEFAULT_VALUES.EMPTY,\r\n    ft: {\r\n      FS: DEFAULT_VALUES.EMPTY,\r\n      Te: DEFAULT_VALUES.EMPTY,\r\n      qU: DEFAULT_VALUES.EMPTY,\r\n      lS: DEFAULT_VALUES.EMPTY,\r\n      yJ: DEFAULT_VALUES.EMPTY,\r\n    },\r\n    googleId: DEFAULT_VALUES.EMPTY,\r\n    profileObj: {\r\n      googleId: DEFAULT_VALUES.EMPTY,\r\n      imageUrl: DEFAULT_VALUES.EMPTY,\r\n      email: DEFAULT_VALUES.EMPTY,\r\n      name: DEFAULT_VALUES.EMPTY,\r\n      givenName: DEFAULT_VALUES.EMPTY,\r\n    },\r\n    qc: {\r\n      token_type: DEFAULT_VALUES.EMPTY,\r\n      access_token: DEFAULT_VALUES.EMPTY,\r\n    },\r\n    tokenId: DEFAULT_VALUES.EMPTY,\r\n    tokenObj: {\r\n      token_type: DEFAULT_VALUES.EMPTY,\r\n      access_token: DEFAULT_VALUES.EMPTY,\r\n      scope: DEFAULT_VALUES.EMPTY,\r\n      login_hint: DEFAULT_VALUES.EMPTY,\r\n    },\r\n  },\r\n  isAuthorized: DEFAULT_VALUES.FALSE,\r\n  isLoading: DEFAULT_VALUES.FALSE,\r\n  userFailureMessage: DEFAULT_VALUES.EMPTY,\r\n};\r\n\r\nconst authReducer = (\r\n  state = initialState,\r\n  action: {\r\n    type: string;\r\n    isAuthorized: boolean;\r\n    userData: string;\r\n    isLoading: boolean;\r\n    userFailureMessage: string;\r\n  }\r\n) => {\r\n  switch (action.type) {\r\n    case ACTION_CONST.SET_USER_DATA: {\r\n      return {\r\n        ...state,\r\n        userData: action.userData,\r\n        isAuthorized: DEFAULT_VALUES.TRUE,\r\n      };\r\n    }\r\n    case ACTION_CONST.SET_DEFAULT_VALUES: {\r\n      return {\r\n        ...state,\r\n        userData: initialState.userData,\r\n        isAuthorized: DEFAULT_VALUES.FALSE,\r\n        token: DEFAULT_VALUES.EMPTY,\r\n      };\r\n    }\r\n    case ACTION_CONST.SET_USER_FAILURE: {\r\n      return {\r\n        ...state,\r\n        userFailureMessage: action.userFailureMessage,\r\n      };\r\n    }\r\n    case ACTION_CONST.SET_IS_LOADING_PROGRESS: {\r\n      return { ...state, isLoading: action.isLoading };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setUserData = (userData: any) => ({\r\n  type: ACTION_CONST.SET_USER_DATA,\r\n  userData,\r\n});\r\n\r\nexport const setAuthFailure = (userFailureMessage: string) => ({\r\n  type: ACTION_CONST.SET_USER_FAILURE,\r\n  userFailureMessage,\r\n});\r\n\r\nexport const setIsLoadingInProgress = (isLoading: boolean) => ({\r\n  type: ACTION_CONST.SET_IS_LOADING_PROGRESS,\r\n  isLoading,\r\n});\r\n\r\nexport const logout = () => ({ type: ACTION_CONST.SET_DEFAULT_VALUES });\r\n\r\nexport default authReducer;\r\n","import React from \"react\";\nimport \"./Login.scss\";\nimport { GoogleLogin } from 'react-google-login';\nimport { useDispatch } from 'react-redux';\nimport { setAuthFailure, setUserData } from '../../redux/auth-reducer';\nimport { GOOGLE_API_KEY } from '../../api-keys/api-keys';\n\nconst Login: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const successGoogle = (response: any) => {\n    dispatch(setUserData(response));\n  }\n\n  const failureGoogle = (authFailureMessage: any) => {\n    dispatch(setAuthFailure(authFailureMessage));\n  }\n\n  return (\n    <div className=\"Login\">\n      <GoogleLogin\n        clientId={GOOGLE_API_KEY}\n        buttonText=\"Login\"\n        onSuccess={successGoogle}\n        onFailure={failureGoogle}\n        cookiePolicy={\"single_host_origin\"}\n      />\n    </div>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport { GoogleLogout } from \"react-google-login\";\nimport { useDispatch } from \"react-redux\";\nimport { GOOGLE_API_KEY } from \"../../api-keys/api-keys\";\nimport { logout } from \"../../redux/auth-reducer\";\nimport \"./Logout.scss\";\n\nconst Logout: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const onSuccess = () => {\n    dispatch(logout());\n  };\n\n  return (\n    <div className=\"Logout\">\n      <GoogleLogout\n        clientId={GOOGLE_API_KEY}\n        buttonText=\"Logout\"\n        onLogoutSuccess={onSuccess}\n      />\n    </div>\n  );\n};\n\nexport default Logout;\n","import React from \"react\";\nimport { ELEMENT_TEXT } from \"../../shared/const\";\nimport \"./Header.scss\";\nimport { useSelector } from \"react-redux\";\nimport Login from \"../Login/Login\";\nimport Logout from \"../Logout/Logout\";\n\nconst Header: React.FC = () => {\n  const userName = useSelector(\n    (store: any) => store.auth.userData.profileObj.name\n  );\n  const isAuthorized = useSelector((store: any) => store.auth.isAuthorized);\n\n  return (\n    <div className=\"Header\">\n      <h1>{ELEMENT_TEXT.APP_NAME}</h1>\n      <>\n        {isAuthorized\n          ? `${ELEMENT_TEXT.AUTHORIZED} ${userName}`\n          : ELEMENT_TEXT.NOT_AUTHORIZED}\n      </>\n      {!isAuthorized ? <Login /> : <Logout />}\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { ELEMENT_TEXT } from '../../shared/const';\nimport './Footer.scss';\n\nconst Footer: React.FC = () => (\n  <div className=\"Footer\">\n    {ELEMENT_TEXT.COPYRIGHTS}\n  </div>\n);\n\nexport default Footer;\n","import React, { useState } from \"react\";\nimport \"./App.scss\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport { useIdleTimer } from 'react-idle-timer'\nimport MainPage from \"./components/MainPage/MainPage\";\nimport BookmarksPage from \"./components/BookmarksPage/BookmarksPage\";\nimport SideBar from \"./components/SideBar/SideBar\";\nimport { DEFAULT_VALUES, ROUTE_NAMES_BOOKMARKS, ROUTE_NAMES_MAIN } from \"./shared/const\";\nimport IdleMask from \"./components/IdleMask/IdleMask\";\nimport Header from \"./components/Header/Header\";\nimport Footer from \"./components/Footer/Footer\";\nimport { useDispatch } from \"react-redux\";\nimport { logout } from \"./redux/auth-reducer\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const [isIdle, setIsIdle] = useState(DEFAULT_VALUES.FALSE);\n  \n  const handleOnIdle = () => {\n    //TODO Last user usage\n    // console.log('last active', getLastActiveTime())\n    setIsIdle(DEFAULT_VALUES.TRUE);\n    dispatch(logout());\n  }\n\n  const handleOnActive = () => {\n    setIsIdle(DEFAULT_VALUES.FALSE);\n  }\n\n  useIdleTimer({\n    timeout: DEFAULT_VALUES.IDLE_DELAY_TIME,\n    onIdle: handleOnIdle,\n    onActive: handleOnActive,\n    debounce: DEFAULT_VALUES.IDLE_DEBOUNCE,\n  })\n\n  return (\n    <div className=\"App\">\n      {isIdle && <IdleMask />}\n      <HashRouter>\n        <Header />\n        <SideBar />\n        <Route exact path={`/${ROUTE_NAMES_MAIN}`}>\n          <MainPage />\n        </Route>\n        <Route exact path={`/${ROUTE_NAMES_BOOKMARKS}`}>\n          <BookmarksPage />\n        </Route>\n        <Footer />\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\n\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport searchFormReducer from \"./searchForm-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport imagesListReducer from \"./imagesList-reducer\";\r\nimport bookmarksReducer from \"./bookmarks-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n  imagesList: imagesListReducer,\r\n  searchForm: searchFormReducer,\r\n  bookmarks: bookmarksReducer,\r\n  auth: authReducer,\r\n});\r\n\r\nlet initialState = {};\r\n\r\nlet store = createStore(\r\n  reducers,\r\n  localStorage.reduxState ? JSON.parse(localStorage.reduxState) : initialState,\r\n  composeWithDevTools(applyMiddleware(thunkMiddleware))\r\n);\r\n\r\nstore.subscribe(\r\n  () => (localStorage.reduxState = JSON.stringify(store.getState()))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}